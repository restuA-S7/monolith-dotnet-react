<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HotChocolate.Types.Scalars.Upload</name>
    </assembly>
    <members>
        <member name="T:HotChocolate.Types.FileValueNode">
            <summary>
            This file literal is used in order to allow for
            an optimized path through the execution engine.
            </summary>
        </member>
        <member name="M:HotChocolate.Types.FileValueNode.#ctor(HotChocolate.Types.IFile)">
            <summary>
            Creates a new instance of <see cref="T:HotChocolate.Types.FileValueNode" />
            </summary>
            <param name="file">
            The file.
            </param>
        </member>
        <member name="P:HotChocolate.Types.FileValueNode.Kind">
            <inheritdoc />
        </member>
        <member name="P:HotChocolate.Types.FileValueNode.Location">
            <inheritdoc />
        </member>
        <member name="P:HotChocolate.Types.FileValueNode.Value">
            <inheritdoc />
        </member>
        <member name="P:HotChocolate.Types.FileValueNode.HotChocolate#Language#IValueNode#Value">
            <inheritdoc />
        </member>
        <member name="M:HotChocolate.Types.FileValueNode.Equals(HotChocolate.Types.FileValueNode)">
            <summary>
            Determines whether the specified <see cref="T:HotChocolate.Types.FileValueNode"/>
            is equal to the current <see cref="T:HotChocolate.Types.FileValueNode"/>.
            </summary>
            <param name="other">
            The <see cref="T:HotChocolate.Types.FileValueNode"/> to compare with the current
            <see cref="T:HotChocolate.Types.FileValueNode"/>.
            </param>
            <returns>
            <c>true</c> if the specified <see cref="T:HotChocolate.Types.FileValueNode"/> is equal
            to the current <see cref="T:HotChocolate.Types.FileValueNode"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HotChocolate.Types.FileValueNode.Equals(HotChocolate.Language.IValueNode)">
            <summary>
            Determines whether the specified <see cref="T:HotChocolate.Language.IValueNode"/> is equal
            to the current <see cref="T:HotChocolate.Types.FileValueNode"/>.
            </summary>
            <param name="other">
            The <see cref="T:HotChocolate.Language.IValueNode"/> to compare with the current
            <see cref="T:HotChocolate.Types.FileValueNode"/>.
            </param>
            <returns>
            <c>true</c> if the specified <see cref="T:HotChocolate.Language.IValueNode"/> is equal
            to the current <see cref="T:HotChocolate.Types.FileValueNode"/>;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HotChocolate.Types.FileValueNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to
            the current <see cref="T:HotChocolate.Types.FileValueNode"/>.
            </summary>
            <param name="obj">
            The <see cref="T:System.Object"/> to compare with the current
            <see cref="T:HotChocolate.Types.FileValueNode"/>.
            </param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object"/> is equal to the
            current <see cref="T:HotChocolate.Types.FileValueNode"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HotChocolate.Types.FileValueNode.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:HotChocolate.Types.FileValueNode"/>
            object.
            </summary>
            <returns>
            A hash code for this instance that is suitable for use in
            hashing algorithms and data structures such as a hash table.
            </returns>
        </member>
        <member name="M:HotChocolate.Types.FileValueNode.ToString">
            <summary>
            Returns the GraphQL syntax representation of this <see cref="T:HotChocolate.Language.ISyntaxNode"/>.
            </summary>
            <returns>
            Returns the GraphQL syntax representation of this <see cref="T:HotChocolate.Language.ISyntaxNode"/>.
            </returns>
        </member>
        <member name="M:HotChocolate.Types.FileValueNode.ToString(System.Boolean)">
            <summary>
            Returns the GraphQL syntax representation of this <see cref="T:HotChocolate.Language.ISyntaxNode"/>.
            </summary>
            <param name="indented">
            A value that indicates whether the GraphQL output should be formatted,
            which includes indenting nested GraphQL tokens, adding
            new lines, and adding white space between property names and values.
            </param>
            <returns>
            Returns the GraphQL syntax representation of this <see cref="T:HotChocolate.Language.ISyntaxNode"/>.
            </returns>
        </member>
        <member name="T:HotChocolate.Types.IFile">
            <summary>
            Represents a uploaded file.
            </summary>
        </member>
        <member name="P:HotChocolate.Types.IFile.Name">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="P:HotChocolate.Types.IFile.Length">
            <summary>
            Gets the file length in bytes.
            </summary>
        </member>
        <member name="M:HotChocolate.Types.IFile.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Asynchronously copies the contents of the uploaded file to the target stream.
            </summary>
            <param name="target">
            The stream to copy the file contents to.
            </param>
            <param name="cancellationToken">
            The cancellation token.
            </param>
        </member>
        <member name="M:HotChocolate.Types.IFile.OpenReadStream">
            <summary>
            Opens the request stream for reading the uploaded file.
            </summary>
        </member>
        <member name="T:HotChocolate.Types.StreamFile">
            <summary>
            An implementation of <see cref="T:HotChocolate.Types.IFile"/> that allows to pass in streams into the
            execution engine.
            </summary>
        </member>
        <member name="M:HotChocolate.Types.StreamFile.#ctor(System.String,System.Func{System.IO.Stream},System.Nullable{System.Int64})">
            <summary>
            Creates a new instance of <see cref="T:HotChocolate.Types.StreamFile"/>.
            </summary>
            <param name="name">
            The file name.
            </param>
            <param name="openReadStream">
            A delegate to open the stream.
            </param>
            <param name="length">
            The file length if available.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is <c>null</c> or <see cref="F:System.String.Empty"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="openReadStream"/> is <c>null</c>.
            </exception>
        </member>
        <member name="P:HotChocolate.Types.StreamFile.Name">
            <inheritdoc />
        </member>
        <member name="P:HotChocolate.Types.StreamFile.Length">
            <inheritdoc />
        </member>
        <member name="M:HotChocolate.Types.StreamFile.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HotChocolate.Types.StreamFile.OpenReadStream">
            <inheritdoc />
        </member>
        <member name="T:HotChocolate.Types.UploadType">
            <summary>
            The GraphQL Upload scalar.
            </summary>
        </member>
        <member name="M:HotChocolate.Types.UploadType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HotChocolate.Types.UploadType"/> class.
            </summary>
        </member>
        <member name="M:HotChocolate.Types.UploadType.#ctor(HotChocolate.NameString,System.String,HotChocolate.Types.BindingBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:HotChocolate.Types.UploadType"/> class.
            </summary>
        </member>
    </members>
</doc>
